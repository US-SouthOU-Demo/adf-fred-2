# Continuous Deployment
# Deploys to various environments (Dev, QA, Prod) when code pushed to the main branch

name: Azure Data Factory Continuous Deployment

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

# Relies on the following variables being configured in GitHub
# - vars.AZURE_CLIENT_ID
# - vars.AZURE_TENANT_ID
# - vars.AZURE_SUBSCRIPTION_ID
# - vars.RESOURCE_GROUP_NAME
# - vars.DATA_FACTORY_NAME
# - secrets.STORAGE_ACCOUNT_TOKEN

permissions:
      id-token: write
      contents: read

concurrency:
  group: ${{ github.workflow }}

env:
  containerURI: 'https://saesripoc.blob.core.windows.net/private'

jobs:
  build:
    name: Build ARM Template
    runs-on: ubuntu-latest
    environment: development

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Export ARM Template
        id: export
        uses: azure/data-factory-export-action@v1.2.0
        with:
          path: ./AzureDataFactory/src
          id: /subscriptions/${{ vars.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP_NAME }}/providers/Microsoft.DataFactory/factories/${{ vars.DATA_FACTORY_NAME }}
        
      # Uploading our artifact from adf_publish branch
      - uses: actions/upload-artifact@v3
        with:
          name: adf-artifact
          path: ${{ steps.export.outputs.arm-template-directory }}
          
  Dev_Deploy:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    environment: development

    steps:
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          # Artifact name
          name: adf-artifact

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
          
      # Deploying to UAT environment
      - name: Deploy resources to Dev
        #uses: azure/data-factory-deploy-action@v1.2.0
        uses: fredgohsman/data-factory-deploy-action@main
        with:
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          dataFactoryName: ${{ vars.DATA_FACTORY_NAME }}
          armTemplateParametersFile: linkedTemplates/ArmTemplateParameters_master.json
          additionalParameters: 'containerUri=${{ env.containerURI }} containerSasToken=${{ secrets.STORAGE_ACCOUNT_TOKEN }}'
          useLinkedTemplates: true
          
  QA_Deploy:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: build
    environment: qa

    steps:
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          # Artifact name
          name: adf-artifact

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
          
      # Deploying to QA environment
      - name: Deploy resources to QA
        #uses: Azure/data-factory-deploy-action@v1.2.0
        uses: fredgohsman/data-factory-deploy-action@main
        with:
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          dataFactoryName: ${{ vars.DATA_FACTORY_NAME }}
          armTemplateParametersFile: linkedTemplates/ArmTemplateParameters_master.json
          additionalParameters: 'containerUri=${{ env.containerURI }} containerSasToken=${{ secrets.STORAGE_ACCOUNT_TOKEN }}'
          useLinkedTemplates: true
          
  PROD_Deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: QA_Deploy
    environment: production
    
    steps:    
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          # Artifact name
          name: adf-artifact

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
          
      # Deploying to Production environment
      - name: Deploy resources to Production
        #uses: Azure/data-factory-deploy-action@v1.2.0
        uses: fredgohsman/data-factory-deploy-action@main
        with:
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          dataFactoryName: ${{ vars.DATA_FACTORY_NAME }}
          armTemplateParametersFile: linkedTemplates/ArmTemplateParameters_master.json
          additionalParameters: 'containerUri=${{ env.containerURI }} containerSasToken=${{ secrets.STORAGE_ACCOUNT_TOKEN }}'
          useLinkedTemplates: true
